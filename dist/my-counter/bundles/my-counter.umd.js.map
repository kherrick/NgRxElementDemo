{"version":3,"file":"my-counter.umd.js.map","sources":["ng://my-counter/lib/counter.actions.ts","ng://my-counter/lib/counter.component.ts","ng://my-counter/lib/counter-increment/counter-increment.component.ts","ng://my-counter/lib/counter-decrement/counter-decrement.component.ts","ng://my-counter/lib/counter-reset/counter-reset.component.ts","ng://my-counter/lib/counter.reducer.ts","ng://my-counter/lib/counter.module.ts"],"sourcesContent":["import { Action } from '@ngrx/store';\n\nexport enum ActionTypes {\n  Increment = '[Counter Component] Increment',\n  Decrement = '[Counter Component] Decrement',\n  Reset = '[Counter Component] Reset',\n}\n\nexport class Increment implements Action {\n  readonly type = ActionTypes.Increment;\n}\n\nexport class Decrement implements Action {\n  readonly type = ActionTypes.Decrement;\n}\n\nexport class Reset implements Action {\n  readonly type = ActionTypes.Reset;\n}\n","import { Component, OnInit, Injector } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.css']\n})\nexport class CounterComponent implements OnInit {\n\n  count$: Observable<number>;\n\n  constructor(private store: Store<{ count: number }>) {\n\n  }\n\n  ngOnInit() {\n    this.count$ = this.store.pipe(select('count'));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Increment} from '../counter.actions';\n\n@Component({\n  selector: 'app-counter-increment',\n  templateUrl: './counter-increment.component.html',\n  styleUrls: ['./counter-increment.component.css']\n})\nexport class CounterIncrementComponent implements OnInit {\n\n  constructor(private store: Store<{ count: number }>) { }\n\n  ngOnInit() {\n  }\n\n  increment() {\n    this.store.dispatch(new Increment());\n  }\n\n}\n","  import { Component, OnInit } from '@angular/core';\n\n  import { Store } from '@ngrx/store';\n  import { Decrement } from '../counter.actions';\n\n  @Component({\n    selector: 'app-counter-decrement',\n    templateUrl: './counter-decrement.component.html',\n    styleUrls: ['./counter-decrement.component.css']\n  })\n  export class CounterDecrementComponent implements OnInit {\n\n    constructor(private store: Store<{ count: number }>) { }\n\n    ngOnInit() {\n    }\n\n    decrement() {\n      this.store.dispatch(new Decrement());\n    }\n\n  }\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Reset } from '../counter.actions';\n\n@Component({\n  selector: 'app-counter-reset',\n  templateUrl: './counter-reset.component.html',\n  styleUrls: ['./counter-reset.component.css']\n})\nexport class CounterResetComponent implements OnInit {\n\n  constructor(private store: Store<{ count: number }>) { }\n\n  ngOnInit() {\n  }\n\n  reset() {\n    this.store.dispatch(new Reset());\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { ActionTypes } from './counter.actions';\n\nexport const initialState = 0;\n\nexport function counterReducer(state = initialState, action: Action) {\n  switch (action.type) {\n    case ActionTypes.Increment:\n      return state + 1;\n\n    case ActionTypes.Decrement:\n      return state - 1;\n\n    case ActionTypes.Reset:\n      return 0;\n\n    default:\n      return state;\n  }\n}\n","import { NgModule, Injector } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CounterComponent } from './counter.component';\nimport { CounterIncrementComponent } from './counter-increment/counter-increment.component';\nimport { CounterDecrementComponent } from './counter-decrement/counter-decrement.component';\nimport { CounterResetComponent } from './counter-reset/counter-reset.component';\nimport { StoreModule } from '@ngrx/store';\nimport { counterReducer } from './counter.reducer';\nimport { createCustomElement } from '@angular/elements';\n\n@NgModule({\n  declarations: [CounterComponent, CounterIncrementComponent,\n    CounterDecrementComponent, CounterResetComponent],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    StoreModule.forRoot({ count: counterReducer })\n  ],\n  entryComponents: [CounterComponent,\n    CounterIncrementComponent,\n    CounterDecrementComponent,\n    CounterResetComponent]\n})\nexport class CounterModule {\n    constructor(private injector: Injector ) {\n      const CounterElement = createCustomElement(CounterComponent, { injector });\n      // Register the custom element with the browser.\n      customElements.define('counter-element', CounterElement);\n\n      const CounterIncrementElement = createCustomElement(CounterIncrementComponent, { injector });\n      customElements.define('counter-increment', CounterIncrementElement);\n      const CounterDecrementElement = createCustomElement(CounterDecrementComponent, { injector });\n      customElements.define('counter-decrement', CounterDecrementElement);\n      const CounterResetElement = createCustomElement(CounterResetComponent, { injector });\n      customElements.define('counter-reset', CounterResetElement);\n    }\n\n}\n"],"names":["store","select","Component","Store","createCustomElement","NgModule","CommonModule","MatButtonModule","StoreModule","Injector"],"mappings":"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"}
