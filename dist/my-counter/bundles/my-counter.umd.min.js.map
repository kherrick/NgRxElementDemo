{"version":3,"sources":["ng://my-counter/lib/counter.actions.ts","ng://my-counter/lib/counter.component.ts","ng://my-counter/lib/counter-increment/counter-increment.component.ts","ng://my-counter/lib/counter-decrement/counter-decrement.component.ts","ng://my-counter/lib/counter-reset/counter-reset.component.ts","ng://my-counter/lib/counter.reducer.ts","ng://my-counter/lib/counter.module.ts"],"names":["Increment","Decrement","Reset","this","type","ActionTypes","CounterComponent","store","prototype","ngOnInit","count$","pipe","select","Component","args","selector","template","Store","CounterIncrementComponent","increment","dispatch","CounterDecrementComponent","decrement","CounterResetComponent","reset","counterReducer","state","action","CounterModule","injector","CounterElement","createCustomElement","customElements","define","CounterIncrementElement","CounterDecrementElement","CounterResetElement","NgModule","declarations","imports","CommonModule","MatButtonModule","StoreModule","forRoot","count","entryComponents","Injector"],"mappings":"0gBAGEA,UAAY,gCACZC,UAAY,gCACZC,MAAQ,+BAGV,SAAAF,IACWG,KAAAC,KAAOC,EAAYL,aAG9B,SAAAC,IACWE,KAAAC,KAAOC,EAAYJ,aAG9B,SAAAC,IACWC,KAAAC,KAAOC,EAAYH,OCjB9BI,EAAA,WAcE,SAAAA,EAAoBC,GAAAJ,KAAAI,MAAAA,EAOtB,OAHED,EAAAE,UAAAC,SAAA,WACEN,KAAKO,OAASP,KAAKI,MAAMI,KAAKC,EAAAA,OAAO,+BAdxCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,cACVC,SAAA,4GANOC,EAAAA,SAoBTX,EArBA,GCAAY,EAAA,WAWE,SAAAA,EAAoBX,GAAAJ,KAAAI,MAAAA,EAStB,OAPEW,EAAAV,UAAAC,SAAA,aAGAS,EAAAV,UAAAW,UAAA,WACEhB,KAAKI,MAAMa,SAAS,IAAIpB,wBAb3Ba,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,wBACVC,SAAA,gJALOC,EAAAA,SAmBTC,EApBA,GCAEG,EAAA,WAYE,SAAAA,EAAoBd,GAAAJ,KAAAI,MAAAA,EAStB,OAPEc,EAAAb,UAAAC,SAAA,aAGAY,EAAAb,UAAAc,UAAA,WACEnB,KAAKI,MAAMa,SAAS,IAAInB,wBAb3BY,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,wBACVC,SAAA,iJALOC,EAAAA,SAmBTI,EArBA,GCAFE,EAAA,WAWE,SAAAA,EAAoBhB,GAAAJ,KAAAI,MAAAA,EAQtB,OANEgB,EAAAf,UAAAC,SAAA,aAGAc,EAAAf,UAAAgB,MAAA,WACErB,KAAKI,MAAMa,SAAS,IAAIlB,wBAb3BW,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,oBACVC,SAAA,6IALOC,EAAAA,SAkBTM,EAnBA,GCKA,SAAgBE,EAAeC,EAAsBC,GACnD,YAD6B,IAAAD,IAAAA,EAFH,GAGlBC,EAAOvB,MACb,KAAKC,EAAYL,UACf,OAAO0B,EAAQ,EAEjB,KAAKrB,EAAYJ,UACf,OAAOyB,EAAQ,EAEjB,KAAKrB,EAAYH,MACf,OAAO,EAET,QACE,OAAOwB,GCjBb,IAAAE,EAAA,WAyBI,SAAAA,EAAoBC,GAAA1B,KAAA0B,SAAAA,MACZC,EAAiBC,EAAAA,oBAAoBzB,EAAkB,CAAEuB,SAAQA,IAEvEG,eAAeC,OAAO,kBAAmBH,OAEnCI,EAA0BH,EAAAA,oBAAoBb,EAA2B,CAAEW,SAAQA,IACzFG,eAAeC,OAAO,oBAAqBC,OACrCC,EAA0BJ,EAAAA,oBAAoBV,EAA2B,CAAEQ,SAAQA,IACzFG,eAAeC,OAAO,oBAAqBE,OACrCC,EAAsBL,EAAAA,oBAAoBR,EAAuB,CAAEM,SAAQA,IACjFG,eAAeC,OAAO,gBAAiBG,GAG7C,2BA3BCC,EAAAA,SAAQvB,KAAA,CAAC,CACRwB,aAAc,CAAChC,EAAkBY,EAC/BG,EAA2BE,GAC7BgB,QAAS,CACPC,EAAAA,aACAC,EAAAA,gBACAC,EAAAA,YAAYC,QAAQ,CAAEC,MAAOnB,KAE/BoB,gBAAiB,CAACvC,EAChBY,EACAG,EACAE,gDAtBeuB,EAAAA,YAsCnBlB,EAtCA,kIDG4B","sourcesContent":["import { Action } from '@ngrx/store';\n\nexport enum ActionTypes {\n  Increment = '[Counter Component] Increment',\n  Decrement = '[Counter Component] Decrement',\n  Reset = '[Counter Component] Reset',\n}\n\nexport class Increment implements Action {\n  readonly type = ActionTypes.Increment;\n}\n\nexport class Decrement implements Action {\n  readonly type = ActionTypes.Decrement;\n}\n\nexport class Reset implements Action {\n  readonly type = ActionTypes.Reset;\n}\n","import { Component, OnInit, Injector } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.css']\n})\nexport class CounterComponent implements OnInit {\n\n  count$: Observable<number>;\n\n  constructor(private store: Store<{ count: number }>) {\n\n  }\n\n  ngOnInit() {\n    this.count$ = this.store.pipe(select('count'));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Increment} from '../counter.actions';\n\n@Component({\n  selector: 'app-counter-increment',\n  templateUrl: './counter-increment.component.html',\n  styleUrls: ['./counter-increment.component.css']\n})\nexport class CounterIncrementComponent implements OnInit {\n\n  constructor(private store: Store<{ count: number }>) { }\n\n  ngOnInit() {\n  }\n\n  increment() {\n    this.store.dispatch(new Increment());\n  }\n\n}\n","  import { Component, OnInit } from '@angular/core';\n\n  import { Store } from '@ngrx/store';\n  import { Decrement } from '../counter.actions';\n\n  @Component({\n    selector: 'app-counter-decrement',\n    templateUrl: './counter-decrement.component.html',\n    styleUrls: ['./counter-decrement.component.css']\n  })\n  export class CounterDecrementComponent implements OnInit {\n\n    constructor(private store: Store<{ count: number }>) { }\n\n    ngOnInit() {\n    }\n\n    decrement() {\n      this.store.dispatch(new Decrement());\n    }\n\n  }\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Reset } from '../counter.actions';\n\n@Component({\n  selector: 'app-counter-reset',\n  templateUrl: './counter-reset.component.html',\n  styleUrls: ['./counter-reset.component.css']\n})\nexport class CounterResetComponent implements OnInit {\n\n  constructor(private store: Store<{ count: number }>) { }\n\n  ngOnInit() {\n  }\n\n  reset() {\n    this.store.dispatch(new Reset());\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { ActionTypes } from './counter.actions';\n\nexport const initialState = 0;\n\nexport function counterReducer(state = initialState, action: Action) {\n  switch (action.type) {\n    case ActionTypes.Increment:\n      return state + 1;\n\n    case ActionTypes.Decrement:\n      return state - 1;\n\n    case ActionTypes.Reset:\n      return 0;\n\n    default:\n      return state;\n  }\n}\n","import { NgModule, Injector } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CounterComponent } from './counter.component';\nimport { CounterIncrementComponent } from './counter-increment/counter-increment.component';\nimport { CounterDecrementComponent } from './counter-decrement/counter-decrement.component';\nimport { CounterResetComponent } from './counter-reset/counter-reset.component';\nimport { StoreModule } from '@ngrx/store';\nimport { counterReducer } from './counter.reducer';\nimport { createCustomElement } from '@angular/elements';\n\n@NgModule({\n  declarations: [CounterComponent, CounterIncrementComponent,\n    CounterDecrementComponent, CounterResetComponent],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    StoreModule.forRoot({ count: counterReducer })\n  ],\n  entryComponents: [CounterComponent,\n    CounterIncrementComponent,\n    CounterDecrementComponent,\n    CounterResetComponent]\n})\nexport class CounterModule {\n    constructor(private injector: Injector ) {\n      const CounterElement = createCustomElement(CounterComponent, { injector });\n      // Register the custom element with the browser.\n      customElements.define('counter-element', CounterElement);\n\n      const CounterIncrementElement = createCustomElement(CounterIncrementComponent, { injector });\n      customElements.define('counter-increment', CounterIncrementElement);\n      const CounterDecrementElement = createCustomElement(CounterDecrementComponent, { injector });\n      customElements.define('counter-decrement', CounterDecrementElement);\n      const CounterResetElement = createCustomElement(CounterResetComponent, { injector });\n      customElements.define('counter-reset', CounterResetElement);\n    }\n\n}\n"]}