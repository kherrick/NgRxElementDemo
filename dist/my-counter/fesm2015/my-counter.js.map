{"version":3,"file":"my-counter.js.map","sources":["ng://my-counter/lib/counter.actions.ts","ng://my-counter/lib/counter.component.ts","ng://my-counter/lib/counter-increment/counter-increment.component.ts","ng://my-counter/lib/counter-decrement/counter-decrement.component.ts","ng://my-counter/lib/counter-reset/counter-reset.component.ts","ng://my-counter/lib/counter.reducer.ts","ng://my-counter/lib/counter.module.ts"],"sourcesContent":["import { Action } from '@ngrx/store';\n\nexport enum ActionTypes {\n  Increment = '[Counter Component] Increment',\n  Decrement = '[Counter Component] Decrement',\n  Reset = '[Counter Component] Reset',\n}\n\nexport class Increment implements Action {\n  readonly type = ActionTypes.Increment;\n}\n\nexport class Decrement implements Action {\n  readonly type = ActionTypes.Decrement;\n}\n\nexport class Reset implements Action {\n  readonly type = ActionTypes.Reset;\n}\n","import { Component, OnInit, Injector } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.css']\n})\nexport class CounterComponent implements OnInit {\n\n  count$: Observable<number>;\n\n  constructor(private store: Store<{ count: number }>) {\n\n  }\n\n  ngOnInit() {\n    this.count$ = this.store.pipe(select('count'));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Increment} from '../counter.actions';\n\n@Component({\n  selector: 'app-counter-increment',\n  templateUrl: './counter-increment.component.html',\n  styleUrls: ['./counter-increment.component.css']\n})\nexport class CounterIncrementComponent implements OnInit {\n\n  constructor(private store: Store<{ count: number }>) { }\n\n  ngOnInit() {\n  }\n\n  increment() {\n    this.store.dispatch(new Increment());\n  }\n\n}\n","  import { Component, OnInit } from '@angular/core';\n\n  import { Store } from '@ngrx/store';\n  import { Decrement } from '../counter.actions';\n\n  @Component({\n    selector: 'app-counter-decrement',\n    templateUrl: './counter-decrement.component.html',\n    styleUrls: ['./counter-decrement.component.css']\n  })\n  export class CounterDecrementComponent implements OnInit {\n\n    constructor(private store: Store<{ count: number }>) { }\n\n    ngOnInit() {\n    }\n\n    decrement() {\n      this.store.dispatch(new Decrement());\n    }\n\n  }\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Reset } from '../counter.actions';\n\n@Component({\n  selector: 'app-counter-reset',\n  templateUrl: './counter-reset.component.html',\n  styleUrls: ['./counter-reset.component.css']\n})\nexport class CounterResetComponent implements OnInit {\n\n  constructor(private store: Store<{ count: number }>) { }\n\n  ngOnInit() {\n  }\n\n  reset() {\n    this.store.dispatch(new Reset());\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { ActionTypes } from './counter.actions';\n\nexport const initialState = 0;\n\nexport function counterReducer(state = initialState, action: Action) {\n  switch (action.type) {\n    case ActionTypes.Increment:\n      return state + 1;\n\n    case ActionTypes.Decrement:\n      return state - 1;\n\n    case ActionTypes.Reset:\n      return 0;\n\n    default:\n      return state;\n  }\n}\n","import { NgModule, Injector } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CounterComponent } from './counter.component';\nimport { CounterIncrementComponent } from './counter-increment/counter-increment.component';\nimport { CounterDecrementComponent } from './counter-decrement/counter-decrement.component';\nimport { CounterResetComponent } from './counter-reset/counter-reset.component';\nimport { StoreModule } from '@ngrx/store';\nimport { counterReducer } from './counter.reducer';\nimport { createCustomElement } from '@angular/elements';\n\n@NgModule({\n  declarations: [CounterComponent, CounterIncrementComponent,\n    CounterDecrementComponent, CounterResetComponent],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    StoreModule.forRoot({ count: counterReducer })\n  ],\n  entryComponents: [CounterComponent,\n    CounterIncrementComponent,\n    CounterDecrementComponent,\n    CounterResetComponent]\n})\nexport class CounterModule {\n    constructor(private injector: Injector ) {\n      const CounterElement = createCustomElement(CounterComponent, { injector });\n      // Register the custom element with the browser.\n      customElements.define('counter-element', CounterElement);\n\n      const CounterIncrementElement = createCustomElement(CounterIncrementComponent, { injector });\n      customElements.define('counter-increment', CounterIncrementElement);\n      const CounterDecrementElement = createCustomElement(CounterDecrementComponent, { injector });\n      customElements.define('counter-decrement', CounterDecrementElement);\n      const CounterResetElement = createCustomElement(CounterResetComponent, { injector });\n      customElements.define('counter-reset', CounterResetElement);\n    }\n\n}\n"],"names":[],"mappings":"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"}
